//! # DBus interface proxies for: `org.a11y.atspi.Accessible`, `org.a11y.atspi.Component`
//!
//! This code was generated by `zbus-xmlgen` `2.0.1` from DBus introspection data.
//! Source: `Interface '/org/a11y/atspi/accessible/root' from service 'org.a11y.atspi.Registry'`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!

use zbus::dbus_proxy;
#[dbus_proxy(
    interface = "org.a11y.atspi.Accessible",
    default_service = "org.a11y.atspi.Registry",
    default_path = "/org/a11y/atspi/accessible/root"
)]
trait Accessible {
    /// GetApplication method
    fn get_application(&self) -> zbus::Result<(String, zbus::zvariant::OwnedObjectPath)>;

    /// GetAttributes method
    fn get_attributes(&self) -> zbus::Result<std::collections::HashMap<String, String>>;

    /// GetChildAtIndex method
    fn get_child_at_index(
        &self,
        index: i32,
    ) -> zbus::Result<(String, zbus::zvariant::OwnedObjectPath)>;

    /// GetChildren method
    fn get_children(&self) -> zbus::Result<Vec<(String, zbus::zvariant::OwnedObjectPath)>>;

    /// GetIndexInParent method
    fn get_index_in_parent(&self) -> zbus::Result<i32>;

    /// GetLocalizedRoleName method
    fn get_localized_role_name(&self) -> zbus::Result<String>;

    /// GetRelationSet method
    fn get_relation_set(
        &self,
    ) -> zbus::Result<Vec<(u32, Vec<(String, zbus::zvariant::OwnedObjectPath)>)>>;

    /// GetRole method
    fn get_role(&self) -> zbus::Result<u32>;

    /// GetRoleName method
    fn get_role_name(&self) -> zbus::Result<String>;

    /// GetState method
    fn get_state(&self) -> zbus::Result<Vec<u32>>;

    /// childCount property
    #[dbus_proxy(property)]
    fn child_count(&self) -> zbus::Result<i32>;

    /// description property
    #[dbus_proxy(property)]
    fn description(&self) -> zbus::Result<String>;

    /// name property
    #[dbus_proxy(property)]
    fn name(&self) -> zbus::Result<String>;

    /// parent property
    #[dbus_proxy(property)]
    fn parent(&self) -> zbus::Result<(String, zbus::zvariant::OwnedObjectPath)>;
}

#[dbus_proxy(
    interface = "org.a11y.atspi.Component",
    default_service = "org.a11y.atspi.Registry",
    default_path = "/org/a11y/atspi/component/root"
)]
trait Component {
    /// Contains method
    fn contains(&self, x: i32, y: i32, coord_type: u32) -> zbus::Result<bool>;

    /// GetAccessibleAtPoint method
    fn get_accessible_at_point(
        &self,
        x: i32,
        y: i32,
        coord_type: u32,
    ) -> zbus::Result<(String, zbus::zvariant::OwnedObjectPath)>;

    /// GetAlpha method
    fn get_alpha(&self) -> zbus::Result<f64>;

    /// GetExtents method
    fn get_extents(&self, coord_type: u32) -> zbus::Result<(i32, i32, i32, i32)>;

    /// GetLayer method
    fn get_layer(&self) -> zbus::Result<u32>;

    /// GetMDIZOrder method
    fn get_mdizorder(&self) -> zbus::Result<i16>;

    /// GetPosition method
    fn get_position(&self, coord_type: u32) -> zbus::Result<(i32, i32)>;

    /// GetSize method
    fn get_size(&self) -> zbus::Result<(i32, i32)>;

    /// GrabFocus method
    fn grab_focus(&self) -> zbus::Result<bool>;
}
